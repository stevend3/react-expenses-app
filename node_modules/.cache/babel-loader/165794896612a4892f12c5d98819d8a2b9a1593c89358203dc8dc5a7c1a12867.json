{"ast":null,"code":"var _jsxFileName = \"/Users/stevendiniz/Documents/Coding_Classes/react-complete-guide/01-starting-setup/src/components/Expenses/ExpensesChart.js\";\nimport React from \"react\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseChart = props => {\n  const chartDataPoints = [{\n    lablel: \"Jan\",\n    value: 0\n  }, {\n    lablel: \"Feb\",\n    value: 0\n  }, {\n    lablel: \"Mar\",\n    value: 0\n  }, {\n    lablel: \"Apr\",\n    value: 0\n  }, {\n    lablel: \"May\",\n    value: 0\n  }, {\n    lablel: \"Jun\",\n    value: 0\n  }, {\n    lablel: \"Jul\",\n    value: 0\n  }, {\n    lablel: \"Aug\",\n    value: 0\n  }, {\n    lablel: \"Sep\",\n    value: 0\n  }, {\n    lablel: \"Oct\",\n    value: 0\n  }, {\n    lablel: \"Nov\",\n    value: 0\n  }, {\n    lablel: \"Dec\",\n    value: 0\n  }];\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.data.getMonth(); // starting at 0 => January = 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n_c = ExpenseChart;\nvar _c;\n$RefreshReg$(_c, \"ExpenseChart\");","map":{"version":3,"names":["React","Chart","jsxDEV","_jsxDEV","ExpenseChart","props","chartDataPoints","lablel","value","expense","expenses","expenseMonth","data","getMonth","amount","dataPoints","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/stevendiniz/Documents/Coding_Classes/react-complete-guide/01-starting-setup/src/components/Expenses/ExpensesChart.js"],"sourcesContent":["import React from \"react\";\n\nimport Chart from \"../Chart/Chart\";\n\nconst ExpenseChart = (props) => {\n  const chartDataPoints = [\n    { lablel: \"Jan\", value: 0 },\n    { lablel: \"Feb\", value: 0 },\n    { lablel: \"Mar\", value: 0 },\n    { lablel: \"Apr\", value: 0 },\n    { lablel: \"May\", value: 0 },\n    { lablel: \"Jun\", value: 0 },\n    { lablel: \"Jul\", value: 0 },\n    { lablel: \"Aug\", value: 0 },\n    { lablel: \"Sep\", value: 0 },\n    { lablel: \"Oct\", value: 0 },\n    { lablel: \"Nov\", value: 0 },\n    { lablel: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.data.getMonth(); // starting at 0 => January = 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,KAAK,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC9B,MAAMC,eAAe,GAAG,CACtB;IAAEC,MAAM,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC3B;IAAED,MAAM,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC3B;IAAED,MAAM,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC3B;IAAED,MAAM,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC3B;IAAED,MAAM,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC3B;IAAED,MAAM,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC3B;IAAED,MAAM,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC3B;IAAED,MAAM,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC3B;IAAED,MAAM,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC3B;IAAED,MAAM,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC3B;IAAED,MAAM,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC3B;IAAED,MAAM,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,CAC5B;EAED,KAAK,MAAMC,OAAO,IAAIJ,KAAK,CAACK,QAAQ,EAAE;IACpC,MAAMC,YAAY,GAAGF,OAAO,CAACG,IAAI,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC9CP,eAAe,CAACK,YAAY,CAAC,CAACH,KAAK,IAAIC,OAAO,CAACK,MAAM;EACvD;EAEA,oBAAOX,OAAA,CAACF,KAAK;IAACc,UAAU,EAAET;EAAgB;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC/C,CAAC;AAACC,EAAA,GAtBIhB,YAAY;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}